{"ast":null,"code":"import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _extends from 'babel-runtime/helpers/extends';\nimport classNames from 'classnames';\nimport events from 'dom-helpers/events';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/util/inDOM';\nimport getScrollbarSize from 'dom-helpers/util/scrollbarSize';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport BaseModal from 'react-overlays/lib/Modal';\nimport isOverflowing from 'react-overlays/lib/utils/isOverflowing';\nimport elementType from 'react-prop-types/lib/elementType';\nimport Fade from './Fade';\nimport Body from './ModalBody';\nimport ModalDialog from './ModalDialog';\nimport Footer from './ModalFooter';\nimport Header from './ModalHeader';\nimport Title from './ModalTitle';\nimport { bsClass, bsSizes, prefix } from './utils/bootstrapUtils';\nimport createChainedFunction from './utils/createChainedFunction';\nimport splitComponentProps from './utils/splitComponentProps';\nimport { Size } from './utils/StyleConfig';\n\nvar propTypes = _extends({}, BaseModal.propTypes, ModalDialog.propTypes, {\n  /**\n   * Include a backdrop component. Specify 'static' for a backdrop that doesn't\n   * trigger an \"onHide\" when clicked.\n   */\n  backdrop: PropTypes.oneOf(['static', true, false]),\n\n  /**\n   * Close the modal when escape key is pressed\n   */\n  keyboard: PropTypes.bool,\n\n  /**\n   * Open and close the Modal with a slide and fade animation.\n   */\n  animation: PropTypes.bool,\n\n  /**\n   * A Component type that provides the modal content Markup. This is a useful\n   * prop when you want to use your own styles and markup to create a custom\n   * modal component.\n   */\n  dialogComponentClass: elementType,\n\n  /**\n   * When `true` The modal will automatically shift focus to itself when it\n   * opens, and replace it to the last focused element when it closes.\n   * Generally this should never be set to false as it makes the Modal less\n   * accessible to assistive technologies, like screen-readers.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * When `true` The modal will prevent focus from leaving the Modal while\n   * open. Consider leaving the default value here, as it is necessary to make\n   * the Modal work well with assistive technologies, such as screen readers.\n   */\n  enforceFocus: PropTypes.bool,\n\n  /**\n   * When `true` The modal will restore focus to previously focused element once\n   * modal is hidden\n   */\n  restoreFocus: PropTypes.bool,\n\n  /**\n   * When `true` The modal will show itself.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * A callback fired when the header closeButton or non-static backdrop is\n   * clicked. Required if either are specified.\n   */\n  onHide: PropTypes.func,\n\n  /**\n   * Callback fired before the Modal transitions in\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired as the Modal begins to transition in\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the Modal finishes transitioning in\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired right before the Modal transitions out\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired as the Modal begins to transition out\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the Modal finishes transitioning out\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @private\n   */\n  container: BaseModal.propTypes.container\n});\n\nvar defaultProps = _extends({}, BaseModal.defaultProps, {\n  animation: true,\n  dialogComponentClass: ModalDialog\n});\n\nvar childContextTypes = {\n  $bs_modal: PropTypes.shape({\n    onHide: PropTypes.func\n  })\n};\n\nvar Modal = function (_React$Component) {\n  _inherits(Modal, _React$Component);\n\n  function Modal(props, context) {\n    _classCallCheck(this, Modal);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this.handleEntering = _this.handleEntering.bind(_this);\n    _this.handleExited = _this.handleExited.bind(_this);\n    _this.handleWindowResize = _this.handleWindowResize.bind(_this);\n    _this.handleDialogClick = _this.handleDialogClick.bind(_this);\n    _this.state = {\n      style: {}\n    };\n    return _this;\n  }\n\n  Modal.prototype.getChildContext = function getChildContext() {\n    return {\n      $bs_modal: {\n        onHide: this.props.onHide\n      }\n    };\n  };\n\n  Modal.prototype.componentWillUnmount = function componentWillUnmount() {\n    // Clean up the listener if we need to.\n    this.handleExited();\n  };\n\n  Modal.prototype.handleEntering = function handleEntering() {\n    // FIXME: This should work even when animation is disabled.\n    events.on(window, 'resize', this.handleWindowResize);\n    this.updateStyle();\n  };\n\n  Modal.prototype.handleExited = function handleExited() {\n    // FIXME: This should work even when animation is disabled.\n    events.off(window, 'resize', this.handleWindowResize);\n  };\n\n  Modal.prototype.handleWindowResize = function handleWindowResize() {\n    this.updateStyle();\n  };\n\n  Modal.prototype.handleDialogClick = function handleDialogClick(e) {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    this.props.onHide();\n  };\n\n  Modal.prototype.updateStyle = function updateStyle() {\n    if (!canUseDOM) {\n      return;\n    }\n\n    var dialogNode = this._modal.getDialogElement();\n\n    var dialogHeight = dialogNode.scrollHeight;\n    var document = ownerDocument(dialogNode);\n    var bodyIsOverflowing = isOverflowing(ReactDOM.findDOMNode(this.props.container || document.body));\n    var modalIsOverflowing = dialogHeight > document.documentElement.clientHeight;\n    this.setState({\n      style: {\n        paddingRight: bodyIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n        paddingLeft: !bodyIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n      }\n    });\n  };\n\n  Modal.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        backdrop = _props.backdrop,\n        animation = _props.animation,\n        show = _props.show,\n        Dialog = _props.dialogComponentClass,\n        className = _props.className,\n        style = _props.style,\n        children = _props.children,\n        onEntering = _props.onEntering,\n        onExited = _props.onExited,\n        props = _objectWithoutProperties(_props, ['backdrop', 'animation', 'show', 'dialogComponentClass', 'className', 'style', 'children', 'onEntering', 'onExited']);\n\n    var _splitComponentProps = splitComponentProps(props, BaseModal),\n        baseModalProps = _splitComponentProps[0],\n        dialogProps = _splitComponentProps[1];\n\n    var inClassName = show && !animation && 'in';\n    return React.createElement(BaseModal, _extends({}, baseModalProps, {\n      ref: function ref(c) {\n        _this2._modal = c;\n      },\n      show: show,\n      onEntering: createChainedFunction(onEntering, this.handleEntering),\n      onExited: createChainedFunction(onExited, this.handleExited),\n      backdrop: backdrop,\n      backdropClassName: classNames(prefix(props, 'backdrop'), inClassName),\n      containerClassName: prefix(props, 'open'),\n      transition: animation ? Fade : undefined,\n      dialogTransitionTimeout: Modal.TRANSITION_DURATION,\n      backdropTransitionTimeout: Modal.BACKDROP_TRANSITION_DURATION\n    }), React.createElement(Dialog, _extends({}, dialogProps, {\n      style: _extends({}, this.state.style, style),\n      className: classNames(className, inClassName),\n      onClick: backdrop === true ? this.handleDialogClick : null\n    }), children));\n  };\n\n  return Modal;\n}(React.Component);\n\nModal.propTypes = propTypes;\nModal.defaultProps = defaultProps;\nModal.childContextTypes = childContextTypes;\nModal.Body = Body;\nModal.Header = Header;\nModal.Title = Title;\nModal.Footer = Footer;\nModal.Dialog = ModalDialog;\nModal.TRANSITION_DURATION = 300;\nModal.BACKDROP_TRANSITION_DURATION = 150;\nexport default bsClass('modal', bsSizes([Size.LARGE, Size.SMALL], Modal));","map":{"version":3,"sources":["G:/android/bfcroyal/New folder/react-loan-calculator-master (2)/react-loan-calculator-master/node_modules/react-bootstrap/es/Modal.js"],"names":["_objectWithoutProperties","_classCallCheck","_possibleConstructorReturn","_inherits","_extends","classNames","events","ownerDocument","canUseDOM","getScrollbarSize","React","PropTypes","ReactDOM","BaseModal","isOverflowing","elementType","Fade","Body","ModalDialog","Footer","Header","Title","bsClass","bsSizes","prefix","createChainedFunction","splitComponentProps","Size","propTypes","backdrop","oneOf","keyboard","bool","animation","dialogComponentClass","autoFocus","enforceFocus","restoreFocus","show","onHide","func","onEnter","onEntering","onEntered","onExit","onExiting","onExited","container","defaultProps","childContextTypes","$bs_modal","shape","Modal","_React$Component","props","context","_this","call","handleEntering","bind","handleExited","handleWindowResize","handleDialogClick","state","style","prototype","getChildContext","componentWillUnmount","on","window","updateStyle","off","e","target","currentTarget","dialogNode","_modal","getDialogElement","dialogHeight","scrollHeight","document","bodyIsOverflowing","findDOMNode","body","modalIsOverflowing","documentElement","clientHeight","setState","paddingRight","undefined","paddingLeft","render","_this2","_props","Dialog","className","children","_splitComponentProps","baseModalProps","dialogProps","inClassName","createElement","ref","c","backdropClassName","containerClassName","transition","dialogTransitionTimeout","TRANSITION_DURATION","backdropTransitionTimeout","BACKDROP_TRANSITION_DURATION","onClick","Component","LARGE","SMALL"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _extends from 'babel-runtime/helpers/extends';\nimport classNames from 'classnames';\nimport events from 'dom-helpers/events';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/util/inDOM';\nimport getScrollbarSize from 'dom-helpers/util/scrollbarSize';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport BaseModal from 'react-overlays/lib/Modal';\nimport isOverflowing from 'react-overlays/lib/utils/isOverflowing';\nimport elementType from 'react-prop-types/lib/elementType';\n\nimport Fade from './Fade';\nimport Body from './ModalBody';\nimport ModalDialog from './ModalDialog';\nimport Footer from './ModalFooter';\nimport Header from './ModalHeader';\nimport Title from './ModalTitle';\nimport { bsClass, bsSizes, prefix } from './utils/bootstrapUtils';\nimport createChainedFunction from './utils/createChainedFunction';\nimport splitComponentProps from './utils/splitComponentProps';\nimport { Size } from './utils/StyleConfig';\n\nvar propTypes = _extends({}, BaseModal.propTypes, ModalDialog.propTypes, {\n\n  /**\n   * Include a backdrop component. Specify 'static' for a backdrop that doesn't\n   * trigger an \"onHide\" when clicked.\n   */\n  backdrop: PropTypes.oneOf(['static', true, false]),\n\n  /**\n   * Close the modal when escape key is pressed\n   */\n  keyboard: PropTypes.bool,\n\n  /**\n   * Open and close the Modal with a slide and fade animation.\n   */\n  animation: PropTypes.bool,\n\n  /**\n   * A Component type that provides the modal content Markup. This is a useful\n   * prop when you want to use your own styles and markup to create a custom\n   * modal component.\n   */\n  dialogComponentClass: elementType,\n\n  /**\n   * When `true` The modal will automatically shift focus to itself when it\n   * opens, and replace it to the last focused element when it closes.\n   * Generally this should never be set to false as it makes the Modal less\n   * accessible to assistive technologies, like screen-readers.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * When `true` The modal will prevent focus from leaving the Modal while\n   * open. Consider leaving the default value here, as it is necessary to make\n   * the Modal work well with assistive technologies, such as screen readers.\n   */\n  enforceFocus: PropTypes.bool,\n\n  /**\n   * When `true` The modal will restore focus to previously focused element once\n   * modal is hidden\n   */\n  restoreFocus: PropTypes.bool,\n\n  /**\n   * When `true` The modal will show itself.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * A callback fired when the header closeButton or non-static backdrop is\n   * clicked. Required if either are specified.\n   */\n  onHide: PropTypes.func,\n\n  /**\n   * Callback fired before the Modal transitions in\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired as the Modal begins to transition in\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the Modal finishes transitioning in\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired right before the Modal transitions out\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired as the Modal begins to transition out\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the Modal finishes transitioning out\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @private\n   */\n  container: BaseModal.propTypes.container\n});\n\nvar defaultProps = _extends({}, BaseModal.defaultProps, {\n  animation: true,\n  dialogComponentClass: ModalDialog\n});\n\nvar childContextTypes = {\n  $bs_modal: PropTypes.shape({\n    onHide: PropTypes.func\n  })\n};\n\nvar Modal = function (_React$Component) {\n  _inherits(Modal, _React$Component);\n\n  function Modal(props, context) {\n    _classCallCheck(this, Modal);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this.handleEntering = _this.handleEntering.bind(_this);\n    _this.handleExited = _this.handleExited.bind(_this);\n    _this.handleWindowResize = _this.handleWindowResize.bind(_this);\n    _this.handleDialogClick = _this.handleDialogClick.bind(_this);\n\n    _this.state = {\n      style: {}\n    };\n    return _this;\n  }\n\n  Modal.prototype.getChildContext = function getChildContext() {\n    return {\n      $bs_modal: {\n        onHide: this.props.onHide\n      }\n    };\n  };\n\n  Modal.prototype.componentWillUnmount = function componentWillUnmount() {\n    // Clean up the listener if we need to.\n    this.handleExited();\n  };\n\n  Modal.prototype.handleEntering = function handleEntering() {\n    // FIXME: This should work even when animation is disabled.\n    events.on(window, 'resize', this.handleWindowResize);\n    this.updateStyle();\n  };\n\n  Modal.prototype.handleExited = function handleExited() {\n    // FIXME: This should work even when animation is disabled.\n    events.off(window, 'resize', this.handleWindowResize);\n  };\n\n  Modal.prototype.handleWindowResize = function handleWindowResize() {\n    this.updateStyle();\n  };\n\n  Modal.prototype.handleDialogClick = function handleDialogClick(e) {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    this.props.onHide();\n  };\n\n  Modal.prototype.updateStyle = function updateStyle() {\n    if (!canUseDOM) {\n      return;\n    }\n\n    var dialogNode = this._modal.getDialogElement();\n    var dialogHeight = dialogNode.scrollHeight;\n\n    var document = ownerDocument(dialogNode);\n    var bodyIsOverflowing = isOverflowing(ReactDOM.findDOMNode(this.props.container || document.body));\n    var modalIsOverflowing = dialogHeight > document.documentElement.clientHeight;\n\n    this.setState({\n      style: {\n        paddingRight: bodyIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n        paddingLeft: !bodyIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n      }\n    });\n  };\n\n  Modal.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        backdrop = _props.backdrop,\n        animation = _props.animation,\n        show = _props.show,\n        Dialog = _props.dialogComponentClass,\n        className = _props.className,\n        style = _props.style,\n        children = _props.children,\n        onEntering = _props.onEntering,\n        onExited = _props.onExited,\n        props = _objectWithoutProperties(_props, ['backdrop', 'animation', 'show', 'dialogComponentClass', 'className', 'style', 'children', 'onEntering', 'onExited']);\n\n    var _splitComponentProps = splitComponentProps(props, BaseModal),\n        baseModalProps = _splitComponentProps[0],\n        dialogProps = _splitComponentProps[1];\n\n    var inClassName = show && !animation && 'in';\n\n    return React.createElement(\n      BaseModal,\n      _extends({}, baseModalProps, {\n        ref: function ref(c) {\n          _this2._modal = c;\n        },\n        show: show,\n        onEntering: createChainedFunction(onEntering, this.handleEntering),\n        onExited: createChainedFunction(onExited, this.handleExited),\n        backdrop: backdrop,\n        backdropClassName: classNames(prefix(props, 'backdrop'), inClassName),\n        containerClassName: prefix(props, 'open'),\n        transition: animation ? Fade : undefined,\n        dialogTransitionTimeout: Modal.TRANSITION_DURATION,\n        backdropTransitionTimeout: Modal.BACKDROP_TRANSITION_DURATION\n      }),\n      React.createElement(\n        Dialog,\n        _extends({}, dialogProps, {\n          style: _extends({}, this.state.style, style),\n          className: classNames(className, inClassName),\n          onClick: backdrop === true ? this.handleDialogClick : null\n        }),\n        children\n      )\n    );\n  };\n\n  return Modal;\n}(React.Component);\n\nModal.propTypes = propTypes;\nModal.defaultProps = defaultProps;\nModal.childContextTypes = childContextTypes;\n\nModal.Body = Body;\nModal.Header = Header;\nModal.Title = Title;\nModal.Footer = Footer;\n\nModal.Dialog = ModalDialog;\n\nModal.TRANSITION_DURATION = 300;\nModal.BACKDROP_TRANSITION_DURATION = 150;\n\nexport default bsClass('modal', bsSizes([Size.LARGE, Size.SMALL], Modal));"]},"metadata":{},"sourceType":"module"}