{"ast":null,"code":"import _classCallCheck from\"G:\\\\android\\\\bfcroyal\\\\New folder\\\\react-loan-calculator-master (2)\\\\react-loan-calculator-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"G:\\\\android\\\\bfcroyal\\\\New folder\\\\react-loan-calculator-master (2)\\\\react-loan-calculator-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"G:\\\\android\\\\bfcroyal\\\\New folder\\\\react-loan-calculator-master (2)\\\\react-loan-calculator-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"G:\\\\android\\\\bfcroyal\\\\New folder\\\\react-loan-calculator-master (2)\\\\react-loan-calculator-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'../css/App.css';import'../css/_common1.css';import'../css/_royaltycalculator.css';import'../css/_switchbtn.css';import'../css/_booktemplate.css';import{Grid,Row,Col,Form}from'react-bootstrap';import SliderAmount from'./SliderAmount';import SliderDuration from'./SliderDuration';import RightSide from'./RightSide';import Roy from'./Roy';var LoanCalculator=/*#__PURE__*/function(_Component){_inherits(LoanCalculator,_Component);var _super=_createSuper(LoanCalculator);/**\n     * ================================\n     * ==========CONSTRUCTOR ==========\n     * ===============================\n     * @param props\n     */function LoanCalculator(props){var _this;_classCallCheck(this,LoanCalculator);_this=_super.call(this,props);// SET STARTER CALCULATUION\nvar MPR=_this.props.APR1/100/12;var amount=_this.props.valueA;var duration=_this.props.valueD;var totalAmountToRepay=amount+amount*MPR*duration;var monthly=totalAmountToRepay/duration;/**\n         *\n         console.log('Before Fixing');\n         console.log('total amount to repay: ' + totalAmountToRepay + '=' + amount + '+((' + amount + '*' + MPR +')' + '*' + duration + ')');\n         console.log('monthly inst: '+ monthly + '=' + totalAmountToRepay+'/'+duration);\n         console.log('after fixing');\n         console.log('total amount: ' +  Math.round(totalAmountToRepay).toFixed(2));\n         console.log('monthly inst: '+ Math.round(monthly).toFixed(2));\n         */ // save props values in to the state\n_this.state={valueAmount:_this.props.valueA,stepAmount:_this.props.stepA,maxAmount:_this.props.maxA,minAmount:_this.props.minA,valueDuration:_this.props.valueD,stepDuration:_this.props.stepD,maxDuration:_this.props.maxD,minDuration:_this.props.minD,APR:_this.props.APR1,amountToRepay:Math.round(totalAmountToRepay).toFixed(),monthlyInst:Math.round(monthly).toFixed()};return _this;}/**\n     * ===============================================\n     * ======== UPDATE FUNCTION ==================\n     * =============================================\n     * @param e\n     */_createClass(LoanCalculator,[{key:\"update\",value:function update(e){// Assign to let changedID ID of slider which has been changed\nvar changedID=e.target.id;var value=e.target.value;if(changedID==='sliderAmount'){this.setState({valueAmount:e.target.value});console.log('EVENT TIME: '+this.getNewDate());console.log('NEW ACTION DETECTED: ID - '+e.target.id+': has been changed. New value: '+this.props.currancy+e.target.value);}if(changedID==='sliderDuration'){this.setState({valueDuration:e.target.value});console.log('EVENT TIME: '+this.getNewDate());console.log('NEW ACTION DETECTED: ID - '+e.target.id+': has been changed. New value: '+e.target.value+' months');}// if button credit history clicked set APR to choosen value\nswitch(changedID){case\"Excellent\":this.setState({APR:this.props.APR1});console.log('EVENT TIME: '+this.getNewDate());console.log('NEW ACTION DETECTED: ID - '+e.target.id+': has been clicked. New APR value is: '+this.props.APR1+'%');break;case\"Good\":this.setState({APR:this.props.APR2});console.log('EVENT TIME: '+this.getNewDate());console.log('NEW ACTION DETECTED: ID - '+e.target.id+': has been clicked. New APR value is: '+this.props.APR2+'%');break;case\"Fair\":this.setState({APR:this.props.APR3});console.log('EVENT TIME: '+this.getNewDate());console.log('NEW ACTION DETECTED: ID - '+e.target.id+': has been clicked. New APR value is: '+this.props.APR3+'%');break;default:break;}this.calculate(changedID,value);}},{key:\"getNewDate\",value:function getNewDate(){var newDate=new Date();var h,m,s;h=newDate.getHours();m=\"0\"+newDate.getMinutes();s=\"0\"+newDate.getSeconds();m=m.slice(-2);s=s.slice(-2);var event_date=h+\":\"+m+\":\"+s;return event_date;}},{key:\"calculate\",/**\n     * ===============================================\n     * ======== CALCULATE FUNCTION ==================\n     * =============================================\n     * @param id\n     * @param value\n     */value:function calculate(id,value){var amount,duration;var MPR=this.state.APR/100/12;// MPR monthly APR for calculation\nvar aprNew;// if calculate is after Duration is changed take value of duration from slider, but value of amount from state\nif(id==='sliderDuration'){duration=parseFloat(value);amount=parseFloat(this.state.valueAmount);}// if calculate is after Amount is changed take value of Amount from slider, but value of duration from state\nelse if(id==='sliderAmount'){amount=parseFloat(value);duration=parseFloat(this.state.valueDuration);}// if calculate is after button credit history clicked  take values from state\nelse{amount=parseFloat(this.state.valueAmount);duration=parseFloat(this.state.valueDuration);switch(id){case\"Excellent\":aprNew=this.props.APR1;MPR=aprNew/100/12;// MPR monthly APR for calculation\nbreak;case\"Good\":aprNew=this.props.APR2;MPR=aprNew/100/12;// MPR monthly APR for calculation\nbreak;case\"Fair\":aprNew=this.props.APR3;MPR=aprNew/100/12;// MPR monthly APR for calculation\nbreak;default:break;}}// calculate total and monthly inst\nvar totalAmountToRepay=amount+amount*MPR*duration;var monthly=totalAmountToRepay/duration;// fixing numbers\ntotalAmountToRepay=Math.round(totalAmountToRepay).toFixed();monthly=Math.round(monthly).toFixed();//save results into state\nthis.setState({amountToRepay:totalAmountToRepay});this.setState({monthlyInst:monthly});}/**\n     * =================================================\n     * =========== RENDER ============================\n     * =============================================\n     * @returns {XML}\n     */},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Grid,{className:\"show-grid mainContainer\"},/*#__PURE__*/React.createElement(Roy,null),\" \",/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{className:\"leftSide\",xs:12,md:6},/*#__PURE__*/React.createElement(Form,{horizontal:true},/*#__PURE__*/React.createElement(SliderAmount,{value:this.state.valueAmount,min:this.state.minAmount,max:this.state.maxAmount,onChange:this.update.bind(this),step:this.state.stepAmount,currancy:this.props.currancy}),/*#__PURE__*/React.createElement(SliderDuration,{value:this.state.valueDuration,min:this.state.minDuration,max:this.state.maxDuration,onChange:this.update.bind(this),step:this.state.stepDuration})),/*#__PURE__*/React.createElement(Col,{className:\"logo\",sm:12},\"YourLogo\")),/*#__PURE__*/React.createElement(RightSide,{currancy:this.props.currancy,amount:this.state.amountToRepay,monthly:this.state.monthlyInst,APR:this.state.APR,btnOnClick:this.update.bind(this)})));}}]);return LoanCalculator;}(Component);//  Assign Types for props\n// Assign deafault values to props\nLoanCalculator.defaultProps={valueD:24,stepD:12,maxD:72,minD:12,valueA:2000,stepA:500,maxA:10000,minA:1000,APR1:3.3,APR2:9.6,APR3:17.4,currancy:'Â£'};export default LoanCalculator;","map":{"version":3,"sources":["G:/android/bfcroyal/New folder/react-loan-calculator-master (2)/react-loan-calculator-master/src/components/App.js"],"names":["React","Component","Grid","Row","Col","Form","SliderAmount","SliderDuration","RightSide","Roy","LoanCalculator","props","MPR","APR1","amount","valueA","duration","valueD","totalAmountToRepay","monthly","state","valueAmount","stepAmount","stepA","maxAmount","maxA","minAmount","minA","valueDuration","stepDuration","stepD","maxDuration","maxD","minDuration","minD","APR","amountToRepay","Math","round","toFixed","monthlyInst","e","changedID","target","id","value","setState","console","log","getNewDate","currancy","APR2","APR3","calculate","newDate","Date","h","m","s","getHours","getMinutes","getSeconds","slice","event_date","aprNew","parseFloat","update","bind","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../css/App.css';\nimport '../css/_common1.css';\nimport '../css/_royaltycalculator.css';\nimport '../css/_switchbtn.css';\nimport '../css/_booktemplate.css';\nimport { Grid, Row, Col, Form} from 'react-bootstrap';\nimport SliderAmount from './SliderAmount';\nimport SliderDuration from './SliderDuration';\nimport RightSide from './RightSide';\nimport Roy from './Roy';\n\nclass LoanCalculator extends Component {\n\n    /**\n     * ================================\n     * ==========CONSTRUCTOR ==========\n     * ===============================\n     * @param props\n     */\n\n    constructor(props) {\n        super(props);\n\n        // SET STARTER CALCULATUION\n\n        let MPR = this.props.APR1 / 100 / 12;\n        let amount = this.props.valueA;\n        let duration = this.props.valueD;\n        let totalAmountToRepay = amount+((amount*MPR)*duration) ;\n        let monthly = totalAmountToRepay / duration;\n\n\n        /**\n         *\n         console.log('Before Fixing');\n         console.log('total amount to repay: ' + totalAmountToRepay + '=' + amount + '+((' + amount + '*' + MPR +')' + '*' + duration + ')');\n         console.log('monthly inst: '+ monthly + '=' + totalAmountToRepay+'/'+duration);\n         console.log('after fixing');\n         console.log('total amount: ' +  Math.round(totalAmountToRepay).toFixed(2));\n         console.log('monthly inst: '+ Math.round(monthly).toFixed(2));\n         */\n\n\n\n        // save props values in to the state\n        this.state = {\n\n            valueAmount: this.props.valueA,\n            stepAmount: this.props.stepA,\n            maxAmount: this.props.maxA,\n            minAmount: this.props.minA,\n\n            valueDuration: this.props.valueD,\n            stepDuration: this.props.stepD,\n            maxDuration: this.props.maxD,\n            minDuration: this.props.minD,\n\n            APR: this.props.APR1,\n            amountToRepay:  Math.round(totalAmountToRepay).toFixed(),\n            monthlyInst: Math.round(monthly).toFixed(),\n\n        };\n    }\n    /**\n     * ===============================================\n     * ======== UPDATE FUNCTION ==================\n     * =============================================\n     * @param e\n     */\n\n\n    update( e ){\n        // Assign to let changedID ID of slider which has been changed\n        let changedID = e.target.id;\n        let value = e.target.value;\n        if (changedID === 'sliderAmount') {\n            this.setState({valueAmount: e.target.value});\n            console.log('EVENT TIME: ' + this.getNewDate());\n            console.log('NEW ACTION DETECTED: ID - '+e.target.id + ': has been changed. New value: '+this.props.currancy + e.target.value);\n        }\n        if (changedID === 'sliderDuration'){\n            this.setState({valueDuration: e.target.value});\n            console.log('EVENT TIME: ' + this.getNewDate());\n            console.log('NEW ACTION DETECTED: ID - '+e.target.id + ': has been changed. New value: '+ e.target.value+' months');\n        }\n\n\n         // if button credit history clicked set APR to choosen value\n        switch (changedID) {\n\n            case \"Excellent\":\n                this.setState({APR: this.props.APR1});\n                console.log('EVENT TIME: ' + this.getNewDate());\n                console.log('NEW ACTION DETECTED: ID - '+e.target.id + ': has been clicked. New APR value is: '+ this.props.APR1+'%');\n                break;\n\n            case \"Good\":\n                this.setState({APR: this.props.APR2});\n                console.log('EVENT TIME: ' + this.getNewDate());\n                console.log('NEW ACTION DETECTED: ID - '+e.target.id + ': has been clicked. New APR value is: '+ this.props.APR2+'%');\n                break;\n\n            case \"Fair\":\n                this.setState({APR: this.props.APR3});\n                console.log('EVENT TIME: ' + this.getNewDate());\n                console.log('NEW ACTION DETECTED: ID - '+e.target.id + ': has been clicked. New APR value is: '+ this.props.APR3+'%');\n                break;\n\n            default:\n                break;\n        }\n\n        this.calculate(changedID, value);\n    }\n\n    getNewDate() {\n\n        let newDate = new Date();\n        let h,m,s;\n        h = newDate.getHours();\n        m = \"0\"+newDate.getMinutes();\n        s = \"0\"+newDate.getSeconds();\n        m = m.slice(-2);\n        s = s.slice(-2);\n\n        let event_date = h +\":\"+m+\":\"+s;\n        return event_date;\n    };\n\n    /**\n     * ===============================================\n     * ======== CALCULATE FUNCTION ==================\n     * =============================================\n     * @param id\n     * @param value\n     */\n\n    calculate(id, value){\n\n        let amount, duration;\n        let MPR = this.state.APR / 100 / 12;  // MPR monthly APR for calculation\n        let aprNew;\n        // if calculate is after Duration is changed take value of duration from slider, but value of amount from state\n        if (id === 'sliderDuration') {\n            duration = parseFloat(value);\n            amount = parseFloat(this.state.valueAmount);\n        }\n        // if calculate is after Amount is changed take value of Amount from slider, but value of duration from state\n        else if (id === 'sliderAmount'){\n            amount = parseFloat(value);\n            duration = parseFloat(this.state.valueDuration);\n        }\n        // if calculate is after button credit history clicked  take values from state\n        else {\n            amount = parseFloat(this.state.valueAmount);\n            duration = parseFloat(this.state.valueDuration);\n            switch (id) {\n\n                case \"Excellent\":\n                    aprNew =  this.props.APR1;\n                    MPR = aprNew / 100 / 12;  // MPR monthly APR for calculation\n                    break;\n\n                case \"Good\":\n                    aprNew =  this.props.APR2;\n                    MPR = aprNew / 100 / 12;  // MPR monthly APR for calculation\n                    break;\n\n                case \"Fair\":\n                    aprNew =  this.props.APR3;\n                    MPR = aprNew / 100 / 12;  // MPR monthly APR for calculation\n                    break;\n\n                default:\n                    break;\n            }\n\n        }\n        // calculate total and monthly inst\n        let totalAmountToRepay = amount+((amount*MPR)*duration) ;\n        let monthly = totalAmountToRepay / duration;\n\n        // fixing numbers\n        totalAmountToRepay =  Math.round(totalAmountToRepay).toFixed();\n        monthly = Math.round(monthly).toFixed();\n\n        //save results into state\n        this.setState({amountToRepay: totalAmountToRepay});\n        this.setState({monthlyInst: monthly});\n\n\n    }\n\n\n    /**\n     * =================================================\n     * =========== RENDER ============================\n     * =============================================\n     * @returns {XML}\n     */\n    render()\n    {\n        return(\n\n            \n            <Grid className=\"show-grid mainContainer\">\n               <Roy/> <Row>\n                    <Col className=\"leftSide\" xs={12} md={6}>\n                        <Form horizontal>\n                            <SliderAmount\n                                value={this.state.valueAmount}\n                                min={this.state.minAmount}\n                                max={this.state.maxAmount}\n                                onChange={this.update.bind(this)}\n                                step={this.state.stepAmount}\n                                currancy={this.props.currancy}\n                            />\n                            <SliderDuration\n                                value={this.state.valueDuration}\n                                min={this.state.minDuration}\n                                max={this.state.maxDuration}\n                                onChange={this.update.bind(this)}\n                                step={this.state.stepDuration}\n                            />\n                        </Form>\n                        <Col className=\"logo\" sm={12}>\n                            YourLogo\n                        </Col>\n                    </Col>\n\n                    <RightSide\n                        currancy={this.props.currancy}\n                        amount={this.state.amountToRepay}\n                        monthly={this.state.monthlyInst}\n                        APR={this.state.APR}\n                        btnOnClick={this.update.bind(this)}\n                    />\n               </Row>\n            </Grid>\n        );\n    }\n}\n//  Assign Types for props\nLoanCalculator.propTypes = {\n\n    valueD: React.PropTypes.number,\n    stepD: React.PropTypes.number,\n    maxD: React.PropTypes.number,\n    minD: React.PropTypes.number,\n\n    valueA: React.PropTypes.number,\n    stepA: React.PropTypes.number,\n    maxA: React.PropTypes.number,\n    minA: React.PropTypes.number,\n    APR1: React.PropTypes.number,\n    APR2: React.PropTypes.number,\n    APR3: React.PropTypes.number,\n    currancy: React.PropTypes.string,\n};\n\n// Assign deafault values to props\n\nLoanCalculator.defaultProps = {\n    valueD: 24,\n    stepD: 12,\n    maxD: 72,\n    minD: 12,\n\n    valueA : 2000,\n    stepA : 500,\n    maxA : 10000,\n    minA : 1000,\n\n    APR1: 3.3,\n    APR2: 9.6,\n    APR3: 17.4,\n\n    currancy: 'Â£',\n};\n\nexport default LoanCalculator;\n\n"]},"metadata":{},"sourceType":"module"}