{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport elementType from 'react-prop-types/lib/elementType';\nvar propTypes = {\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  role: PropTypes.string,\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * this is sort of silly but needed for Button\n   */\n  componentClass: elementType\n};\nvar defaultProps = {\n  componentClass: 'a'\n};\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, MenuItems, etc.\n */\n\n\nvar SafeAnchor = function (_React$Component) {\n  _inherits(SafeAnchor, _React$Component);\n\n  function SafeAnchor(props, context) {\n    _classCallCheck(this, SafeAnchor);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this.handleClick = _this.handleClick.bind(_this);\n    return _this;\n  }\n\n  SafeAnchor.prototype.handleClick = function handleClick(event) {\n    var _props = this.props,\n        disabled = _props.disabled,\n        href = _props.href,\n        onClick = _props.onClick;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  SafeAnchor.prototype.render = function render() {\n    var _props2 = this.props,\n        Component = _props2.componentClass,\n        disabled = _props2.disabled,\n        props = _objectWithoutProperties(_props2, ['componentClass', 'disabled']);\n\n    if (isTrivialHref(props.href)) {\n      props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n      // otherwise, the cursor incorrectly styled (except with role='button')\n\n      props.href = props.href || '#';\n    }\n\n    if (disabled) {\n      props.tabIndex = -1;\n      props.style = _extends({\n        pointerEvents: 'none'\n      }, props.style);\n    }\n\n    return React.createElement(Component, _extends({}, props, {\n      onClick: this.handleClick\n    }));\n  };\n\n  return SafeAnchor;\n}(React.Component);\n\nSafeAnchor.propTypes = propTypes;\nSafeAnchor.defaultProps = defaultProps;\nexport default SafeAnchor;","map":{"version":3,"sources":["G:/android/bfcroyal/New folder/react-loan-calculator-master (2)/react-loan-calculator-master/node_modules/react-bootstrap/es/SafeAnchor.js"],"names":["_extends","_objectWithoutProperties","_classCallCheck","_possibleConstructorReturn","_inherits","React","PropTypes","elementType","propTypes","href","string","onClick","func","disabled","bool","role","tabIndex","oneOfType","number","componentClass","defaultProps","isTrivialHref","trim","SafeAnchor","_React$Component","props","context","_this","call","handleClick","bind","prototype","event","_props","preventDefault","stopPropagation","render","_props2","Component","style","pointerEvents","createElement"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport elementType from 'react-prop-types/lib/elementType';\n\nvar propTypes = {\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  role: PropTypes.string,\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * this is sort of silly but needed for Button\n   */\n  componentClass: elementType\n};\n\nvar defaultProps = {\n  componentClass: 'a'\n};\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, MenuItems, etc.\n */\n\nvar SafeAnchor = function (_React$Component) {\n  _inherits(SafeAnchor, _React$Component);\n\n  function SafeAnchor(props, context) {\n    _classCallCheck(this, SafeAnchor);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this.handleClick = _this.handleClick.bind(_this);\n    return _this;\n  }\n\n  SafeAnchor.prototype.handleClick = function handleClick(event) {\n    var _props = this.props,\n        disabled = _props.disabled,\n        href = _props.href,\n        onClick = _props.onClick;\n\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  SafeAnchor.prototype.render = function render() {\n    var _props2 = this.props,\n        Component = _props2.componentClass,\n        disabled = _props2.disabled,\n        props = _objectWithoutProperties(_props2, ['componentClass', 'disabled']);\n\n    if (isTrivialHref(props.href)) {\n      props.role = props.role || 'button';\n      // we want to make sure there is a href attribute on the node\n      // otherwise, the cursor incorrectly styled (except with role='button')\n      props.href = props.href || '#';\n    }\n\n    if (disabled) {\n      props.tabIndex = -1;\n      props.style = _extends({ pointerEvents: 'none' }, props.style);\n    }\n\n    return React.createElement(Component, _extends({}, props, {\n      onClick: this.handleClick\n    }));\n  };\n\n  return SafeAnchor;\n}(React.Component);\n\nSafeAnchor.propTypes = propTypes;\nSafeAnchor.defaultProps = defaultProps;\n\nexport default SafeAnchor;"]},"metadata":{},"sourceType":"module"}